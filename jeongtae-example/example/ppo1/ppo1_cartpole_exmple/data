{
    "gamma": 0.99,
    "timesteps_per_actorbatch": 256,
    "clip_param": 0.2,
    "entcoeff": 0.01,
    "optim_epochs": 4,
    "optim_stepsize": 0.001,
    "optim_batchsize": 64,
    "lam": 0.95,
    "adam_epsilon": 1e-05,
    "schedule": "linear",
    "verbose": 1,
    "policy": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gASVMgAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMuY29tbW9uLnBvbGljaWVzlIwJTWxwUG9saWN5lJOULg==",
        "__module__": "stable_baselines.common.policies",
        "__doc__": "\n    Policy object that implements actor critic, using a MLP (2 layers of 64)\n\n    :param sess: (TensorFlow session) The current TensorFlow session\n    :param ob_space: (Gym Space) The observation space of the environment\n    :param ac_space: (Gym Space) The action space of the environment\n    :param n_env: (int) The number of environments to run\n    :param n_steps: (int) The number of steps to run for each environment\n    :param n_batch: (int) The number of batch to run (n_envs * n_steps)\n    :param reuse: (bool) If the policy is reusable or not\n    :param _kwargs: (dict) Extra keyword arguments for the nature CNN feature extraction\n    ",
        "__init__": "<function MlpPolicy.__init__ at 0x7f44765ad9d8>",
        "__abstractmethods__": "frozenset()",
        "_abc_registry": "<_weakrefset.WeakSet object at 0x7f44765ae5f8>",
        "_abc_cache": "<_weakrefset.WeakSet object at 0x7f44765ae630>",
        "_abc_negative_cache": "<_weakrefset.WeakSet object at 0x7f44765ae6a0>",
        "_abc_negative_cache_version": 51
    },
    "observation_space": {
        ":type:": "<class 'gym.spaces.box.Box'>",
        ":serialized:": "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",
        "dtype": "float32",
        "shape": [
            4
        ],
        "low": "[-4.8000002e+00 -3.4028235e+38 -4.1887903e-01 -3.4028235e+38]",
        "high": "[4.8000002e+00 3.4028235e+38 4.1887903e-01 3.4028235e+38]",
        "bounded_below": "[ True  True  True  True]",
        "bounded_above": "[ True  True  True  True]",
        "np_random": "RandomState(MT19937)"
    },
    "action_space": {
        ":type:": "<class 'gym.spaces.discrete.Discrete'>",
        ":serialized:": "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",
        "n": 2,
        "shape": [],
        "dtype": "int64",
        "np_random": "RandomState(MT19937)"
    },
    "n_envs": 1,
    "n_cpu_tf_sess": 1,
    "seed": null,
    "_vectorize_action": false,
    "policy_kwargs": {}
}