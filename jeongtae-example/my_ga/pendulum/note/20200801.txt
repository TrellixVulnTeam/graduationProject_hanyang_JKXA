드디어 실행을 그나마 제대로 해보았다.

우선 제일 문제는 최대한 고정된 환경 내에서 비교, 학습하려고 노력해보았으나
방법이 보이지 않는다는 것이다.

env.reset()으로도 매번 랜덤한 환경에서 실행되길래
first_obs를 얻어 set_obs() function을 만들어서 최대한 같은 환경에서 실행할 수 있도록 만들어 보았으나
결국 확인해본 결과 같은 action을 넣어도 매번 다른 결과가 나오는 것을 확인할 수 있었다.

내가 확인할 수 있는 한에선 전부 해보았다고 판단, 다른 알고리즘들과 비교하기 위해
try3_1.py, try3_2.py도 만들어서 비교해보았다.

try3은 parent + mutation + crossover
try3_1은 parent + mutation
try3_2은 논문의 elitism 이었다.

결국 셋다 제대로 학습이 되는 것 같지는 않았으나 비교해보자면
try3에 비해서 try3_1은 한번 내려갔을 때 복구되는데 더 오랜 generation이 소모되었다.
아마 crossover의 random성이 빠졌기 때문이라고 생각된다.
그리고 try3_2은 더 심했다. 이건 우선 내가 제대로 구현하지 못했기 때문일 수도 있으니 논문을 한번 더
읽어봐야한다. 그 위에서 설명하자면 parent를 저장하지 않고 오로지 mutation만 있기 때문인지는 모르겠으나 그냥 일정 값 이상으로 올라가지 못하고 일정 값 이하로 내려가지 못한 채 진동하고 있는 결과가 나왔다.

이에 대해서는 논문을 한번 더 읽어봐야 할 것 같다.
